package uk.ac.man.cs.choif.nlp.pos;

// Skeleton class generated by rmic, do not edit.
// Contents subject to change without notice.


public final class PosTaggerServer_Skel
	extends java.lang.Object
	implements java.rmi.server.Skeleton
{
	private static java.rmi.server.Operation[] operations = { 
		new java.rmi.server.Operation("java.lang.String [] tag(java.lang.String [])")
	};

	private static final long interfaceHash = -595504253983980147L;

	public void dispatch(java.rmi.Remote obj, java.rmi.server.RemoteCall call, int opnum, long hash) throws java.rmi.RemoteException, Exception {
		// Exceptions pass through, to be caught, identified and marshalled

		if (hash != interfaceHash)
			throw new java.rmi.server.SkeletonMismatchException("Hash mismatch");
		uk.ac.man.cs.choif.nlp.pos.PosTaggerServer server = (uk.ac.man.cs.choif.nlp.pos.PosTaggerServer)obj;
		switch (opnum) {
		case 0: {  // tag
			java.lang.String [] $_arrayOf__String_1;
			try {
				java.io.ObjectInput in = call.getInputStream();
				$_arrayOf__String_1 = (java.lang.String [])in.readObject();
			} catch (java.io.IOException ex) {
				throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
			} finally {
				call.releaseInputStream();
			};
			java.lang.String [] $result = server.tag($_arrayOf__String_1);
			try {
				java.io.ObjectOutput  out = call.getResultStream(true);
				out.writeObject($result);
			} catch (java.io.IOException ex) {
				throw new java.rmi.MarshalException("Error marshaling return", ex);
			};
			break;
		}
		default:
			throw new java.rmi.RemoteException("Method number out of range");
		}
	}
	public java.rmi.server.Operation[] getOperations() {
		return operations;
	}
}
